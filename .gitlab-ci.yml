# first 8 char of the SHA commit : CI_COMMIT_SHORT_SHA
# name of the targetted branch of the MR : CI_MERGE_REQUEST_TARGET_BRANCH_NAME

stages:
  - build-server-dev
  - deploy-server-dev
  - deploy-server-prod

variables:
  GRADLE_OPTS: "-Dhttp.proxyHost=192.168.4.8 -Dhttp.proxyPort=3128 -Dhttps.proxyHost=192.168.4.8 -Dhttps.proxyPort=3128 -Dhttps.protocols=TLSv1.2 -Dorg.slf4j.simpleLogger.log.org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  ORG_GRADLE_JVM_ARGS: "-Xmx1024m -XX:MaxPermSize=256m"
  ## Value of variables in gitlab>ci_cd>variables
  # DEV_SERVER_IP: ""     
  # PROD_SERVER_IP: ""    
  # $SSH_USER
  # SSH_PRIVATE_KEY_DEV
  # SSH_PRIVATE_KEY_PROD

before_script:
  - export https_proxy=http://192.168.4.8:3128/
  - export http_proxy=http://192.168.4.8:3128/




################
## Deploy dev ##
################
vuejs-deploy-dev:
  stage: build-server-dev
  image: node:16.19.1-alpine3.17
  script:
    - cd frontend
    - npm install --legacy-peer-deps
    - npm run build-only:dev
  retry: 2
  artifacts:
    paths:
      - frontend/dist
    expire_in: 1 hrs
  cache:
    paths:
      - frontend/node_modules
  only:
    - dev
    - gitlab-ci

java-deploy-dev:
  stage: build-server-dev
  image: gradle:8.4-jdk17
  script:
    - cd backend
    - gradle --no-daemon clean build -Pdev -x test
  retry: 2
  dependencies:     # Set accessible data in vuejs-deploy-dev, to copy data from frontend folder 
    - vuejs-deploy-dev
  cache:
    paths:
      - $CI_PROJECT_DIR/.gradle/caches
  artifacts:
    paths:
      - backend/build/libs/*.war
    expire_in: 5 days
    when: always
  only:
    - dev
    - gitlab-ci

push-deploy-dev:
  stage: deploy-server-dev
  image: charlo56/pgl-ssh-image:latest
  dependencies:
    - vuejs-deploy-dev
    - java-deploy-dev
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apk add --update openssh )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY_DEV" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan $DEV_SERVER_IP >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - sudo chmod -R 777  /opt/tomcat10/webapps
  script:
    - mv backend/build/libs/tauri-0.0.1-SNAPSHOT-plain.war backend/build/libs/tauri.war
    - scp -o StrictHostKeyChecking=no backend/build/libs/tauri.war $SSH_USER@$DEV_SERVER_IP:/srv/tomcat10/webapps 
  retry: 2



#################
## Deploy prod ##
#################
vuejs-deploy-prod:
  stage: deploy-server-prod
  image: node:16.19.1-alpine3.17
  script:
    - cd frontend
    - npm install --legacy-peer-deps
    - npm run build-only:prod
  retry: 2
  artifacts:
    paths:
      - frontend/dist
    expire_in: 1 hrs
  cache:
    paths:
      - frontend/node_modules
  only:
    - main

java-deploy-prod:
  stage: deploy-server-prod
  image: gradle:8.4-jdk17
  script:
    # - cp -r ./frontend/dist ./backend/src/main/resources/static
    - cd backend
    - gradle --no-daemon clean build -Pprod -x test
  dependencies:     # Set accessible data in vuejs-deploy-prod, to copy data from frontend folder 
    - vuejs-deploy-prod
  cache:
    paths:
      - $CI_PROJECT_DIR/.gradle/caches
  artifacts:
    paths:
      - backend/build/libs/*.war
    expire_in: 5 days
    when: always
  only:
    - main